{"version":3,"sources":["components/Pages/Home.js","components/Pages/About.js","components/Pages/Portfolio.js","components/Pages/Contact.js","components/Contexts/PageContext.js","components/Nav/NavBtn.js","components/Nav/Nav.js","components/AppComp/AppComp.js","components/Bg/Particles.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","About","Portfolio","Contact","PageContext","createContext","PageName","props","_useState","useState","_useState2","Object","slicedToArray","page","setPage","Provider","value","children","NavBtn","_useContext","useContext","_useContext2","onClick","name","style","margin","Nav","id","Nav_NavBtn","url","AppComp","console","log","react","components_Nav_Nav","Pages_Home","Pages_About","Pages_Portfolio","Pages_Contact","Particles","App","useEffect","className","Bg_Particles","PageContext_PageName","components_AppComp_AppComp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.841a9a48.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {} from 'react';\r\n\r\n\r\n\r\n\r\nconst About = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>About Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Portfolio = () => {\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Portfolio Page</h1>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Portfolio;","import React, {} from 'react';\r\n\r\n\r\n\r\n\r\nconst Contact = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Contact Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React, {useState, createContext} from 'react';\r\n\r\n\r\n//create context ===========================================\r\nexport const PageContext = createContext();\r\n\r\n\r\n//create state ==============================================\r\nexport const PageName = props => {\r\n    const [page, setPage] = useState('Home');\r\n\r\n\r\n\r\n    return (\r\n        <PageContext.Provider value = {[page, setPage]}>\r\n            {props.children}\r\n        </PageContext.Provider>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport {PageContext} from '../Contexts/PageContext';\r\nimport { BrowserRouter as Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst NavBtn = props => {\r\n\r\n    const [page, setPage] = useContext(PageContext);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div onClick= { () => {setPage(props.name)}} style={{margin: '50px'}}>\r\n                <span>\r\n                    {props.name}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NavBtn;","import React, { useState, useEffect } from 'react';\r\n\r\n//component import ==========================================\r\nimport NavBtn from './NavBtn';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Nav = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div id = 'navbar'>\r\n            Jake Huang\r\n            <NavBtn name='Home' url='/' />\r\n            <NavBtn name='About' url='/About' />\r\n            <NavBtn name ='Portfolio' url='/react-port' />\r\n            <NavBtn name ='Contact' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, {Fragment, useContext} from 'react';\r\n\r\n//Page Import ============================================================================\r\nimport Home from '../Pages/Home';\r\nimport About from '../Pages/About';\r\nimport Portfolio from '../Pages/Portfolio';\r\nimport Contact from '../Pages/Contact';\r\n\r\n//Other Import ==========================================================================\r\nimport Nav from '../Nav/Nav';\r\nimport {PageContext} from '../Contexts/PageContext';\r\n\r\n\r\nconst AppComp = () => {\r\n\r\n    const [page, setPage] = useContext(PageContext);\r\n    console.log('THIS IS THE PAGE THATS IMPORTING FROM USE CONTEXT ', page )\r\n\r\n    switch (page) {\r\n        case 'Home':\r\n            return(\r\n                <Fragment>\r\n                <Nav />\r\n                <Home />\r\n                </Fragment>\r\n            )\r\n            break;\r\n        case 'About':\r\n            return(\r\n                <Fragment>\r\n                <Nav />\r\n                <About />\r\n                </Fragment>\r\n            )\r\n            break;\r\n        case 'Portfolio':\r\n            return(\r\n                <Fragment>\r\n                <Nav />\r\n                <Portfolio />\r\n                </Fragment>\r\n            )\r\n            break;\r\n        case 'Contact':\r\n            return(\r\n                <Fragment>\r\n                <Nav />\r\n                <Contact />\r\n                </Fragment>\r\n            )\r\n                break;\r\n\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>{page}</h1>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AppComp;","import React from 'react';\r\nimport './style.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Particles = () => {\r\n\r\n\r\n    \r\n\r\n    return(\r\n        <div id = 'particles-js' />\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Particles;","import React, {useEffect, useContext} from 'react';\nimport AppComp from './components/AppComp/AppComp';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\n//Page Import ============================================================================\nimport Home from './components/Pages/Home';\nimport About from './components/Pages/About';\n\n//Other Import ==========================================================================\nimport Particles from './components/Bg/Particles';\nimport Nav from './components/Nav/Nav';\nimport {PageName, PageContext} from './components/Contexts/PageContext';\nimport './App.css';\n\nfunction App() {\n  const page = useContext(PageContext);\n  useEffect( () => {\n    \n    console.log('this is the page name in App   ', page)\n  })\n\n\n  return (\n \n  <div className=\"App\">\n    <Particles />\n    <PageName>\n      <AppComp />\n    </PageName>  \n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}